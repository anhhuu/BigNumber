#include <iostream>
#include "Qint.h"
#include "Qfloat.h"
#include "Utils.h"
#include "Convert.h"
#include "BitProcess.h"
#include "Utils.h"
#include <time.h>
#include <bitset>

#include <stdint.h>
#include <cstdint>

void testTask1()
{
	Qint aBig("0");
	Qint bBig("0");
	long long int a = 0;
	long long int b = 0;

	std::cout << "input int a = "; std::cin >> a;
	//aBig = Qint(std::to_string(a));
	std::cin >> aBig;

	std::cout << "input int b = "; std::cin >> b;
	//bBig = Qint(std::to_string(b));
	std::cin >> bBig;

	std::cout << std::endl;

	std::cout << "a \t\t= " << a << std::endl;
	std::cout << "aBig \t\t= " << aBig << std::endl;

	std::cout << "b \t\t= " << b << std::endl;
	std::cout << "bBig \t\t= " << bBig << std::endl;

	std::cout << "a & b \t\t= " << (a & b) << std::endl;
	std::cout << "aBig & bBig \t= " << (aBig & bBig) << std::endl;

	std::cout << "a | b \t\t= " << (a | b) << std::endl;
	std::cout << "aBig | bBig \t= " << (aBig | bBig) << std::endl;

	std::cout << "a ^ b \t\t= " << (a ^ b) << std::endl;
	std::cout << "aBig ^ bBig \t= " << (aBig ^ bBig) << std::endl;

	std::cout << "~a \t\t= " << (~a) << std::endl;
	std::cout << "~aBig \t\t= " << (~aBig) << std::endl;

	std::cout << "a << 5 \t\t= " << (a << 5) << std::endl;
	std::cout << "aBig << 5 \t= " << (aBig << 5) << std::endl;

	std::cout << "a >> 2 \t\t= " << (a >> 2) << std::endl;
	std::cout << "aBig >> 2 \t= " << (aBig >> 2) << std::endl;

	std::cout << std::endl;

	std::cout << "aBig > bBig: \t" << ((aBig > bBig) ? "true" : "false") << std::endl;
	std::cout << "aBig < bBig: \t" << ((aBig < bBig) ? "true" : "false") << std::endl;
	std::cout << "aBig == bBig: \t" << ((aBig == bBig) ? "true" : "false") << std::endl;
	std::cout << "aBig != bBig: \t" << ((aBig != bBig) ? "true" : "false") << std::endl;
	std::cout << "aBig >= bBig: \t" << ((aBig >= bBig) ? "true" : "false") << std::endl;
	std::cout << "aBig <= bBig: \t" << ((aBig <= bBig) ? "true" : "false") << std::endl;

	std::cout << std::endl;

	std::cout << "input a Big num: ";
	Qint cBig;
	cBig.ScanQInt();
	bool* bits = cBig.DecToBin();

	Qint dBig = Qint::BinToDec(bits);

	std::cout << "cBig \t\t= " << cBig << std::endl;
	std::cout << "dBig \t\t= " << dBig << std::endl;

}

int main()
{
	//testTask1();
	std::string num
	std::string num2 = "2034763281210872863858981328256952957676936717332476408528570530831295495740155824716873993144656942281872348247109737436210527927855857074627816833159690379952795900167485615556461982140704479972002062064223324605784823647604754076284978832543563059242019449044353942899089948865589018388678865051859554218025793920053964504180838776023818956242835177463244062261805691313749982002192473317366803680648573344356703961386603717615595525382754847336044051704942269607550118329257306325061302116750385856108223837443919341323147260807288873332651285328780677338907329929737276024439735579150200465445811872803751032903412064303018234671601197499671959893427763529776295883724738936690976336749368229943036266899619393540522622118028046269135391228245570175981003711643996888363959610892641352882620050251155107166154107124189231907081299426951808638529599238102595717299239931214141421023554770700855559004950929404833117825888564525429573783492759033277310584382679775654003981029502169903778822820507214673809432026198082325209685287567059136619455659554947036209031723334912816047562629324653843003922646387725351785506298189005871241586657872769436287780507859411593904992269721568913904288447582979820139922184333984314433432975097626505437589863708761940677635786234159953958577217336256992972321731385621861073907991169392839557335410769520792438944304773598609705711710276164739858374670406622219248962849157924186151222845794272767765621706806030406343185944499909287309554680803589407119387267692420789359505133406787086697858524106329839944880166497950357625873085313776265671593267458487840876507434871535080821116048803756737008244959691404437863138435157451457440726626860151841812114063901777295075543982235214260546563975633093718543481277643745517005270425487368952598944565278155947464422753768496432162594620064734772610046887544579759229119236372464110060257172396010438972756148761621389388015869926156535386039426841251947825075588212150235085577754898735495718761136464434778346062391856979035771207870803007172986214720411906200314578305765796433562049068665477777585777241723065400566938013727218865010450285956328253564273453343056728731949830452891587663837029660720965472724681012074914701157984600768687687234897876761019701816744410153265650069958640767440432524938018706695622887762120628113014103533992925989508721680997635603930417632461505122386364213298749398928209613202371962867517965979309944112423418135458308263630611543033524825663659554275306357794617739929433631845961175483118965706507967993492812911329518941166074930622674706175331676048029076084642134755755360718525446251499163478916321559255456528862502142906459421744403443509463548980129463604421714189412860856020083794290110401471378303904658722883388803270951373270010166700283388501014240762023343810686108706205590687487289349113367848425972082088639772443893994432644994251669662868351003042623725776542626953259524818328961160237395230507382702942583848100744336148117203366419989361493262355437810131335392569916276758180944417495729353264103411236716394047249645482664549660826849143597533075479202247341325464163530913136536001391490951996323604695289708934701613673898413313379087410114316869102214191896779787747645010058506734876618322499081425361076359297473178426383285367504534324653325496613131153141106847871042978679181140465868080558810576851829209812925916415115312661534149837932435395345072387409240115201578762887939060378505752237508832277936400701843358254367309099083335229630229039016533664735524236598290367064856372723928354724120202902190199349345323140754394253337430312885554471885468113381870371730961599956361702606936020815639321492433385603772677125985793129848790900678298719592683591053727921358290566738493574587148388072495968537728445545132500938935911535634185974754830207571561443987671230411399567925090745488389530239663238165323053203269548175123194006285602445665638122071341343132544448375753426244933967514721424307914459865880820254892631212059669786335655472234811419496940917407245537222135482618988202392252487605493590592945425892550538789803952832907668955110893234285624369799963793822806866559534585597821542027455856236859023646771188477051266632830675628655934857463627291641433234999222527737907195209523444304182005485497032393140407761032373098891488918835612753391407485610708647983158473975562210683497136899733424643226401275726162895421362617779712728981835755892659191117537613455473736767294122441696659914452068803303238849446459748160068423317996968871337715396910701482058650018789002841975996662912589690385972448201855156736845933943728202747316371363055437014651828106804970184957508974343234930884928145618274502701184565362629078073829918130577248200125099176104754334479045462594315608504466110357651252336616135109964075113538514830591398788900869800923437094189134609830643793766122717238650698063690374354128523560578016721600892082861084206652209658950042094060640569266410990506323486611707751630869417570912321947628323029020749755515946714997934702020967350049665102355447500505399129537443072852477121243510738266431884270319781190107502703670304141931522915626327970886506400447339240171081753304021015275796669141647183636149854624918086604903973829426586386492540613575242853715988013206104282809077273310356143702107093883552048498756478490235782664500618538484729971151304255891311655067984298178573771372579004512809441167626485857320152907367807339638751926837379858254826386859211966609738118925524719064135219544308143294598190122371674571254374484714650301246008521614833580761962452839606901037087198164271275593296948450115518448745459784637578259880970809689364543985647863450814685906597817935100758074492897411452978821522648460182497414010735275877637899380000847946364045977378810603922164752791561963837589727965394686705736633783472126550008103569537295818707736763384842635134595953764413125539388694982804096611276801374567147662222197317229902132272383068434505481815748450176011373429966229824203945969448407467180888012626196399930140083357536658722023918044388594863491143267245490957847958697606459812663317783501182481204044009052973691543656433031778434326094141919900799456555633619565499476776839164184316729124258788240009120812434866999634307006102673255458742877997643951225916173703633584768234672853954977849338887052810296982292397645402247732207520490542037782380087654072456078224254004335849430575864839007138855614295499144089502603434229775462438747273269742326021101473172919613917251405395259142824788738324334475538910449603797536067722476559121197038221222594279759200527268078738623930394668942329370914896599940079590507375669702596756439666102748960633787215285415188757440097915087029597806677305991310314133809420614044615359578465969611699945126562704916274528149283184603386570790830494497573257463709010213075286024149615989772056652371147767391049237625724501965727173445141756593203484634107009301826277750779002612230277568017902572368523088345992463146260217553597800183627323574116428303466187123853728583196710745517517535358390707392142847337569520517907785592517088192226248043758847388926042386194109223749016069372127324062038676433519493108834897679875936743283578227831515029271833004625318824853722160041051755203800110174747880289060625994912044287612378359088556065625246018635790500914076191439918598667743937297559655094970714020006618496348625967305473951238868757826364413821456631254354535972707643378303742746504195366925683669474252273786690925881074373957950536867961073627490165000240704238728519647790865820451663465619716223395668776722264188162958730949161467232511411439104654922064720337142462986159828838334648766456731933873743225363023672070688260601987216708838704867314586153630901313495513111642228701713679240756375918406757485802550621390225930614926168099275260457933657233665059918500810800760783452520039166800267236031767353119811507595949084742214031774330195295184873141551680265791895758268696250195805872728809394511284458939711712334163519198881997064641182607001984672164146959109216402440139534348914796507058381160110567423665540425003738328954912183246033347861541003531213135973451967435783624650843915918907173834275229679522001174149998582071145513918745913557852095986167061022492545574120705909462524344111990614935124109843462972392381196792182169294313838491851529627642534803362969065499299101482595350676271526992105965363581364886771627097103730326454063985576045514371607042075088664819647092723929544772484111516471126427516674013320431128243647163056174914074487243575463379929857410388649441301822662353515625";

	std::cout << Convert::ConvertFloatToBin(num1+num2);
	system("pause");
	return 0;
}